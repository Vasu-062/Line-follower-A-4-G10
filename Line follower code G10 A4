// Motor Pins
#define LEFT_MOTOR_IN1 9
#define LEFT_MOTOR_IN2 10
#define RIGHT_MOTOR_IN3 11
#define RIGHT_MOTOR_IN4 12
#define LEFT_SPEED 5
#define RIGHT_SPEED 6

// IR Sensor Pins
#define IR_LEFT 2
#define IR_RIGHT 7

// Speed Variables
int baseSpeed = 85;  // Base speed for forward motion (0-255)
int turnSpeed = 25;   // Reduced speed for turning (0-255)

void setup() {
  // Set motor pins as outputs
  pinMode(LEFT_MOTOR_IN1, OUTPUT);
  pinMode(LEFT_MOTOR_IN2, OUTPUT);
  pinMode(RIGHT_MOTOR_IN3, OUTPUT);
  pinMode(RIGHT_MOTOR_IN4, OUTPUT);
  pinMode(LEFT_SPEED, OUTPUT);
  pinMode(RIGHT_SPEED, OUTPUT);

  // Set IR sensor pins as inputs
  pinMode(IR_LEFT, INPUT);
  pinMode(IR_RIGHT, INPUT);
}

void loop() {
  // Read sensor values
  int leftSensor = digitalRead(IR_LEFT);
  int rightSensor = digitalRead(IR_RIGHT);

  // Decision-making based on sensor inputs
  if (leftSensor == 0 && rightSensor == 0) {
    moveForward();  // Both sensors detect black (line)
  } else if (leftSensor == 0 && rightSensor == 1) {
    turnLeft();     // Left sensor detects black, turn left
  } else if (leftSensor == 1 && rightSensor == 0) {
    turnRight();    // Right sensor detects black, turn right
  } else {
    moveForward();   // Both sensors detect white (no line)
  }
}

// Function to move forward
void moveForward() {
  analogWrite(LEFT_SPEED, baseSpeed);
  analogWrite(RIGHT_SPEED, baseSpeed);
  digitalWrite(LEFT_MOTOR_IN1, HIGH);
  digitalWrite(LEFT_MOTOR_IN2, LOW);
  digitalWrite(RIGHT_MOTOR_IN3, HIGH);
  digitalWrite(RIGHT_MOTOR_IN4, LOW);
}

// Function to turn left
void turnLeft() {
  analogWrite(LEFT_SPEED, turnSpeed);  // Slow down left motor
  analogWrite(RIGHT_SPEED, baseSpeed);
  digitalWrite(LEFT_MOTOR_IN1, HIGH);
  digitalWrite(LEFT_MOTOR_IN2, LOW);
  digitalWrite(RIGHT_MOTOR_IN3, HIGH);
  digitalWrite(RIGHT_MOTOR_IN4, LOW);
}

// Function to turn right
void turnRight() {
  analogWrite(LEFT_SPEED, baseSpeed);
  analogWrite(RIGHT_SPEED, turnSpeed); // Slow down right motor
  digitalWrite(LEFT_MOTOR_IN1, HIGH);
  digitalWrite(LEFT_MOTOR_IN2, LOW);
  digitalWrite(RIGHT_MOTOR_IN3, HIGH);
  digitalWrite(RIGHT_MOTOR_IN4, LOW);
}

// Function to stop the motors
void stopMotors() {
  analogWrite(LEFT_SPEED, 0);
  analogWrite(RIGHT_SPEED, 0);
  digitalWrite(LEFT_MOTOR_IN1, LOW);
  digitalWrite(LEFT_MOTOR_IN2, LOW);
  digitalWrite(RIGHT_MOTOR_IN3, LOW);
  digitalWrite(RIGHT_MOTOR_IN4, LOW);
}
